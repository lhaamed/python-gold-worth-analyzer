import requests
import os
from bs4 import BeautifulSoup

# Ù…Ù‚Ø§Ø¯ÛŒØ± Ù…Ø±Ø²ÛŒ ØªØ­Ù„ÛŒÙ„
UPPER_BOUND = 4.4
LOWER_BOUND = 3.8

# ØªÙˆÚ©Ù† Ø±Ø¨Ø§Øª Ùˆ Ø¢ÛŒØ¯ÛŒ Ú†Øª (ÛŒØ§ @channelusername)

TOKEN = os.getenv('TELEGRAM_TOKEN')
CHANNEL_ID = os.getenv('CHANNEL_ID')


def get_prices():
    try:
        gold_18k_price = extract_price_out_of_url("https://www.tgju.org/profile/geram18");
        coin_emami_price = extract_price_out_of_url("https://www.tgju.org/profile/sekee");


        
        
        return gold_18k_price, coin_emami_price
    except Exception as e:
        return None, None


def gold_to_coin_ratio(gold_price_18k, coin_price):
    if gold_price_18k is None or coin_price is None:
        return None, "Ø®Ø·Ø§ Ø¯Ø± Ø§Ø³ØªØ®Ø±Ø§Ø¬ Ù‚ÛŒÙ…Øªâ€ŒÙ‡Ø§"
    
    ratio = gold_price_18k / coin_price
    
    # Ø¢Ø³ØªØ§Ù†Ù‡â€ŒÙ‡Ø§
    if ratio > 0.00032:
        recommendation = "Ø®Ø±ÛŒØ¯ Ø·Ù„Ø§ÛŒ Ø®Ø§Ù… Ø¨Ù‡ØªØ± Ø§Ø³Øª (Ø­Ø¨Ø§Ø¨ Ø³Ú©Ù‡ Ø¨Ø§Ù„Ø§)"
    elif ratio < 0.00028:
        recommendation = "Ø®Ø±ÛŒØ¯ Ø³Ú©Ù‡ Ø¨Ù‡ØªØ± Ø§Ø³Øª (Ø­Ø¨Ø§Ø¨ Ø³Ú©Ù‡ Ú©Ù…)"
    else:
        recommendation = "ØªØµÙ…ÛŒÙ… Ø¨Ø³ØªÚ¯ÛŒ Ø¨Ù‡ Ø§Ø³ØªØ±Ø§ØªÚ˜ÛŒ Ø´Ù…Ø§ Ø¯Ø§Ø±Ø¯ (Ø­Ø¨Ø§Ø¨ Ù…ØªØ¹Ø§Ø¯Ù„)"
    
    return ratio, recommendation

def send_to_telegram(gold_price,coin_price,recommendation):
    url = f'https://api.telegram.org/bot{TOKEN}/sendMessage'

    message = (
        f"ðŸ’° Ù‚ÛŒÙ…Øªâ€ŒÙ‡Ø§ Ø§Ù…Ø±ÙˆØ²:\n"
        f"â€¢ Ø·Ù„Ø§: {gold_price:,} ØªÙˆÙ…Ø§Ù†\n"
        f"â€¢ Ø³Ú©Ù‡: {coin_price:,} ØªÙˆÙ…Ø§Ù†\n"
        f"\nðŸ“Œ ØªÙˆØµÛŒÙ‡:\n{recommendation}"
    )
    
    data = {
        'chat_id': CHANNEL_ID,
        'text': message
    }
    requests.post(url, data=data)

def extract_price_out_of_url(url)
    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'}
    response = requests.get("https://www.tgju.org/profile/sekee", headers=headers)
    soup = BeautifulSoup(response.content, 'html.parser')

    element = soup.find('span', {'data-col': 'info.last_trade.PDrCotVal'})
    if element:
        price_text = element.text  # Ø®Ø±ÙˆØ¬ÛŒ: "146,000,000"
        return price = int(price_text.replace(',', ''))  # Ø®Ø±ÙˆØ¬ÛŒ: 146000000
    else:
        raise ValueError("tag not found")


def main():
    gold_price, coin_price = get_prices()
    ratio, recommendation = gold_to_coin_ratio(gold_price, coin_price)
    
    send_to_telegram(gold_price, coin_price,recommendation)



if __name__ == '__main__':
    main()
